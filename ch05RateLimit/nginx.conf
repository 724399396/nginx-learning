user www-data;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    # Define limit zone
    # 60r/m = 1r/s = 3600r/h
    # if not set burst argument, means only access x req in y second, if more thatn will return 503
    # can add burst argument
    limit_req_zone $request_uri zone=MYZONE:10m rate=60r/m; #$binary_remote_address

    # Redirect all traffict to HTTPS
    server {
        listen 80;
        server_name _;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name _;

        root /home/weili/sites/dome;

        index index.html;

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;

        # Disable SSL
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Optimise cipher suits
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # Enable DH Params
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # SSL sessions
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        location / {
            # burst argument, if exceed limit(for one connection), allow more burst number connection, 1r/s + 5burst = 6 connections, but not immediatly return, will when match rate limit, e.g. this example will return one request per second. if one connection exceed limit, more than 6 connection part will 503, other part will return one per seconds
            # limit_req zone=MYZONE burst=5;
            # nodelay, server the burst request as quickly as possible, but if exceed limit, exceed part request will get 503
            limit_req zone=MYZONE burst=5 nodelay;
            try_files $uri $uri/ =404;
        }

        location ~\.php$ {
            # Pass php requests to the php-fpm service (fastcgi)
            include fastcgi.conf;
            fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
       }
    }

}
